// Package retriever Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// templates/items/edit.html
// templates/items/item.html
// templates/items/items.html
// templates/items/new.html
// templates/shelters/edit.html
// templates/shelters/new.html
// templates/shelters/shelter.html
// templates/shelters/shelters.html
package retriever

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesItemsEditHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\xcf\x4e\x1b\x31\x10\xc6\xef\x79\x8a\xa9\x4f\x89\x44\xb2\xe5\x56\x89\x75\xa4\x16\x42\x8b\x04\x85\xb6\x41\xa2\x47\xc7\x9e\x6c\xac\x7a\xed\xc5\x3b\x5e\x1a\x10\xef\x5e\x39\xfb\x27\xd9\x44\x41\xd4\x97\x38\xe3\x6f\x7e\xf6\xcc\x37\xda\xf4\xc3\xc5\xed\xf9\xfc\xf7\xdd\x0c\x56\x94\x9b\xe9\x20\x8d\x3f\x60\x84\xcd\x38\x43\xcb\x62\x00\x85\x9a\x0e\x00\x00\xd2\x1c\x49\x80\x5c\x09\x5f\x22\x71\x76\x3f\xbf\x1c\x7f\x62\xbb\x47\x56\xe4\xc8\x59\xa5\xf1\xa9\x70\x9e\x18\x48\x67\x09\x2d\x71\xf6\xa4\x15\xad\xb8\xc2\x4a\x4b\x1c\x6f\xfe\x9c\x80\xb6\x9a\xb4\x30\xe3\x52\x0a\x83\xfc\x74\xf2\xb1\x87\x5a\x11\x15\x63\x7c\x0c\xba\xe2\xec\x61\x7c\xff\x79\x7c\xee\xf2\x42\x90\x5e\x18\xdc\xe1\x6a\xe4\xa8\x32\x6c\x33\x49\x93\xc1\xe9\x4c\x69\x82\x2b\xc2\x3c\x4d\xea\xc0\x20\x4d\xea\x22\xd2\x85\x53\xeb\x5a\x7b\x2e\x08\x33\xe7\xd7\x75\xe2\xc2\x37\x04\x6d\x8b\x40\x40\xeb\x02\x39\x23\xfc\x4b\x0c\xb4\xe2\x4c\x36\xe2\x79\x8c\x4c\xbb\x94\x2e\xed\x2b\x5a\x85\x7e\x0f\xa5\x74\x35\x85\x9d\x35\x68\x37\xbd\x4b\xbc\x50\xda\xb1\xa6\x73\xd9\x86\xc3\xa0\x12\x26\x20\x67\xb9\x30\x6d\x69\x71\xdd\x08\x83\x5b\x48\x7b\xcf\x7f\x11\x97\xb8\xc7\xbc\xdc\x04\xea\x07\x27\xf1\xc5\xfd\x22\x7e\xe9\x67\x7c\x57\x87\x4a\xfd\x8c\x7b\xdd\xd9\xe6\xfc\x08\xc2\x92\xa6\xf7\xf5\xfa\xb1\x11\x1f\xeb\xf5\x85\x77\x85\x5b\x2e\xe1\xda\x49\x41\xda\xd9\x77\x41\x4d\x23\x3e\x06\x4d\x17\x81\xc8\xd9\x26\xaf\x0c\x8b\x5c\x13\x03\x67\xa5\xd1\xf2\x0f\x67\xa1\x50\x82\x30\x8e\x14\x9b\xa6\x49\xad\x8d\x53\x55\x8f\x53\x5a\x4a\xaf\x0b\xaa\x49\x95\xf0\xb0\x95\x03\x87\x65\xb0\x32\x5e\x3d\x1c\xbd\x74\x5d\x8f\xa2\x42\xac\x8d\x13\x0a\x38\xbc\xbc\x76\x07\x4d\x70\xd2\x4e\x27\x70\x50\x4e\x86\x1c\x2d\x4d\x32\xa4\x99\xc1\xb8\xfd\xb2\xbe\x52\xc3\xfe\x50\x8e\x26\x1b\x87\xcf\x0e\x48\xd1\xc1\xb7\x28\x9d\x71\x47\x09\xad\x7b\x6f\x51\x7a\xa6\x1d\x25\x35\xd6\xb5\xce\xbd\x05\xec\x19\x76\x00\x94\xce\x96\xce\xe0\xc4\xb8\x6c\xd8\xc0\x47\x67\xbd\xee\x7a\x7c\x0c\x58\x12\x70\xb0\xf8\x04\x0f\x37\xd7\xdf\x88\x8a\x9f\x75\x70\xb8\xa3\x6d\x74\x13\x57\xa0\x1d\xb2\xbb\xfb\x39\x3b\x01\x96\x54\xa7\x89\x26\xcc\x4b\x76\x02\xe4\x03\x8e\x0e\xe5\xd6\xa3\x50\xeb\x92\x04\xa1\x5c\x09\x9b\x61\xcf\x69\xd8\x5a\x1d\x97\x5e\xc2\xb0\xcd\x8c\x29\xa1\x04\xce\x79\x07\xbb\xb8\xfd\x3e\xdb\x4f\xd9\xaf\xb2\xd5\x7a\x2c\x0b\x67\x71\xa7\x82\xb8\xb6\x03\xf4\x7a\xf0\xd4\x12\xad\xea\x9a\xb4\x39\x7d\x3d\x1b\xa4\x49\x3b\xb3\x69\xb2\xf9\xee\xff\x0b\x00\x00\xff\xff\x05\x62\xa9\x6b\x07\x06\x00\x00")

func templatesItemsEditHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesItemsEditHtml,
		"templates/items/edit.html",
	)
}

func templatesItemsEditHtml() (*asset, error) {
	bytes, err := templatesItemsEditHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/items/edit.html", size: 1543, mode: os.FileMode(438), modTime: time.Unix(1552270312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesItemsItemHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\xcf\x6a\xf3\x30\x10\xc4\xef\x7e\x0a\x7d\x3a\x7f\x8e\xdb\x9c\x4a\x91\x0c\x25\x6e\x4b\xa0\xd0\x7f\x09\xb4\xc7\x8d\xbd\xb1\x17\x64\xc9\x91\x37\x09\x69\xf0\xbb\x17\xc7\x36\x24\xb8\x39\x09\xcd\xcc\x6f\x90\x96\x55\xff\x92\xd7\xd9\xe2\xfb\xed\x51\x14\x5c\x9a\x38\x50\xed\x21\x0c\xd8\x5c\x4b\xb4\xb2\x15\x10\xb2\x38\x10\x42\x08\x55\x22\x83\x48\x0b\xf0\x35\xb2\x96\xcb\xc5\x53\x78\x27\xcf\x2d\x0b\x25\x6a\xb9\x23\xdc\x57\xce\xb3\x14\xa9\xb3\x8c\x96\xb5\xdc\x53\xc6\x85\xce\x70\x47\x29\x86\xa7\xcb\x7f\x41\x96\x98\xc0\x84\x75\x0a\x06\xf5\xed\xe4\xe6\xa2\xaa\x60\xae\x42\xdc\x6c\x69\xa7\xe5\x57\xb8\x7c\x08\x67\xae\xac\x80\x69\x65\xf0\xac\x97\x50\x63\x96\xe3\x40\x32\xb1\xc1\x78\xce\x58\x8a\x04\xeb\xd4\x53\xc5\xe4\xac\x8a\x3a\x3d\x50\x51\xf7\x17\xb5\x72\xd9\xa1\x47\x8a\x69\x97\xff\xc0\xcd\x16\x6b\x16\x09\x32\x90\x51\x51\x31\xed\x03\x35\x7b\x67\xf3\x78\x06\x8c\xb9\xf3\x87\x7b\x15\xf5\xca\xc9\x3e\x1e\x27\x83\xd3\x34\x1d\xb0\xf2\x97\xe4\x33\xda\x0c\xfd\x98\xeb\xf4\x6b\xd4\x27\xfd\xe0\x98\x69\xd5\x6b\xc4\xfb\x16\x2c\x13\xff\xf1\xc2\xc1\xb9\x46\x26\xde\x55\x6e\xbd\x16\x2f\x2e\x85\x76\x60\xe3\x86\x3e\x31\x04\x86\xa2\x3e\x35\x4f\xc6\xc4\x3c\x69\x9a\x40\x45\xdd\xa4\x55\x74\x5a\xae\xdf\x00\x00\x00\xff\xff\x33\x37\xfc\x71\x6c\x02\x00\x00")

func templatesItemsItemHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesItemsItemHtml,
		"templates/items/item.html",
	)
}

func templatesItemsItemHtml() (*asset, error) {
	bytes, err := templatesItemsItemHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/items/item.html", size: 620, mode: os.FileMode(438), modTime: time.Unix(1552270312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesItemsItemsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\x41\x6b\xeb\x30\x0c\xc7\xef\xfd\x14\x7a\xa6\xc7\xa6\x7e\xef\xf6\x18\x76\x60\xb4\xdb\x2e\x83\x6d\xac\x85\xed\xe8\xc6\x6a\x62\x48\xec\x2c\x55\xdb\x75\x21\xdf\x7d\xb8\x69\xd6\x24\x1b\xa3\x94\xea\x12\x24\xeb\xff\x47\xd6\x8f\x58\xfc\x99\x3e\x4c\x66\xaf\x8f\x37\x90\x50\x96\x86\x03\xe1\x3f\x90\x2a\x1b\x4b\x86\x96\xf9\x02\x2a\x1d\x0e\x00\x00\x44\x86\xa4\x20\x4a\x54\xb1\x42\x92\x6c\x3e\xbb\x0d\xfe\xb3\xf6\x91\x55\x19\x4a\xb6\x31\xb8\xcd\x5d\x41\x0c\x22\x67\x09\x2d\x49\xb6\x35\x9a\x12\xa9\x71\x63\x22\x0c\xf6\xc9\x08\x8c\x35\x64\x54\x1a\xac\x22\x95\xa2\xfc\x37\xfe\xdb\xb1\x4a\x88\xf2\x00\xdf\xd6\x66\x23\xd9\x4b\x30\xbf\x0e\x26\x2e\xcb\x15\x99\x45\x8a\x2d\x5f\x83\x12\x75\x8c\x8d\x92\x0c\xa5\x18\x4e\x5d\xb4\xce\xd0\x92\xe0\x75\x3e\x10\xbc\xbe\x83\x58\x38\xbd\x6b\x5a\xd5\xc2\x1f\xc1\x21\x04\x1d\xaf\xd9\xaa\x75\x0b\x3e\x26\x8a\x30\x76\xc5\xae\xdb\xc9\xfb\xad\x3f\x6a\xef\xd0\x6a\x2c\xce\x51\x3e\x9b\x0f\x3c\x47\xf7\xb4\x56\x96\x0c\x9d\x35\xed\xb4\x70\xb9\x5b\x2e\xe1\xde\x45\x8a\x8c\xb3\xbf\x78\xf8\xac\xb3\x3e\x41\xc7\x55\x37\x51\x96\x85\xb2\x31\xc2\xd0\x58\x8d\xef\x23\x18\x62\x8a\x1e\x13\x5c\x49\x18\x43\x55\xf5\x26\x2a\xbe\x4f\x24\x48\x87\x65\xf9\x25\x1c\x37\x2c\xa0\xaa\x04\xa7\x3e\x3d\xde\xb7\x38\xc9\xb3\x66\x74\x49\x47\xcf\xee\x92\x7e\x0d\xd3\x4b\x7a\x1e\x58\x37\xa8\x4f\xb4\x2e\x4b\xb4\xba\x05\x4e\xf0\x16\x76\xc1\x0f\xbf\x98\xe0\x75\x51\xf0\xfd\x0b\xf3\x19\x00\x00\xff\xff\xaf\x92\xbe\x54\x71\x04\x00\x00")

func templatesItemsItemsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesItemsItemsHtml,
		"templates/items/items.html",
	)
}

func templatesItemsItemsHtml() (*asset, error) {
	bytes, err := templatesItemsItemsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/items/items.html", size: 1137, mode: os.FileMode(438), modTime: time.Unix(1552270312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesItemsNewHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x6f\xd3\x40\x10\xbd\xe7\x57\x0c\x73\xc6\x18\x6e\x1c\x76\x2d\xa1\xb4\x45\x48\xa0\x16\x35\x95\xe0\xb8\xf6\x4e\xe2\x91\xf6\xc3\xb5\xc7\x2e\xe9\xaf\x47\x9b\x2c\xd4\x96\x52\x55\x9e\x8b\xb5\x6f\xfd\xde\xf8\xcd\x3c\xab\x77\x57\xb7\xdb\xdd\xef\xbb\x6b\x68\xc5\xbb\x6a\xa3\xd2\x03\x9c\x09\x07\x8d\x14\x30\x01\x64\x6c\xb5\x01\x00\x50\x9e\xc4\x40\xd3\x9a\x7e\x20\xd1\xf8\xb0\xbb\x29\x3e\xe3\xfc\x2a\x18\x4f\x1a\x27\xa6\xa7\x2e\xf6\x82\xd0\xc4\x20\x14\x44\xe3\x13\x5b\x69\xb5\xa5\x89\x1b\x2a\x4e\x87\xf7\xc0\x81\x85\x8d\x2b\x86\xc6\x38\xd2\x9f\x3e\x7c\x5c\x48\xb5\x22\x5d\x41\x8f\x23\x4f\x1a\x7f\x15\x0f\x5f\x8a\x6d\xf4\x9d\x11\xae\x1d\xcd\x74\x99\x34\xd9\x03\xfd\x63\x0a\x8b\xa3\xea\xda\xb2\xc0\x37\x21\xaf\xca\x33\xb0\x51\xe5\xd9\x84\xaa\xa3\x3d\xe6\x77\xf7\xb1\xf7\x60\x1a\xe1\x18\x34\x96\x2c\xe4\x87\x12\xc1\x93\xb4\xd1\x6a\xbc\xbb\xbd\xdf\x65\xd5\x54\x5b\x23\x74\x88\xfd\xf1\x3f\xa0\xea\xfe\xe5\x56\x71\xe8\x46\x01\x39\x76\xa4\x51\xe8\x8f\x20\xb0\xd5\xd8\x64\xd2\x2e\x21\xd5\x82\xba\xa0\x7f\xa5\x60\xa9\x7f\x45\xda\xf2\x54\xc1\xac\x36\xf3\xc3\xa2\x71\x6f\x2c\x47\xcc\x3b\x38\x9c\x34\x11\x26\xe3\x46\xd2\xe8\x8d\xa3\xd9\x27\xa4\xfa\x61\x1c\x2d\xc5\xe6\x7d\x57\xa9\xef\xe9\x82\xfe\xcd\x09\x7c\x31\x52\x26\x27\x97\x4d\xde\xf3\x33\xad\x9a\xec\xc0\xcf\x74\x61\xaa\x4b\xee\xcf\xd1\x04\x61\x59\xb7\xb3\xc7\x4c\x7a\x6b\x67\x57\x7d\xec\xe2\x7e\x0f\xdf\x63\x63\x52\x84\x56\x35\x71\x99\xf4\x56\x13\x55\x8f\x22\x31\x64\xfe\x30\xd6\x9e\x05\x2b\x55\x9e\xe1\x9c\xe3\x32\x05\x39\x45\xfc\x9c\x6d\x55\x9e\xfe\xe3\xbf\x01\x00\x00\xff\xff\x53\xfb\x18\x87\xd7\x03\x00\x00")

func templatesItemsNewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesItemsNewHtml,
		"templates/items/new.html",
	)
}

func templatesItemsNewHtml() (*asset, error) {
	bytes, err := templatesItemsNewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/items/new.html", size: 983, mode: os.FileMode(438), modTime: time.Unix(1552270312, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSheltersEditHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\x4f\x6f\xdb\x36\x14\xbf\x07\xc8\x77\x78\xe5\xa1\x91\xb1\x58\x6e\x86\x1e\x86\xd4\x34\xb0\x25\x0d\x96\x61\x4b\x8d\x26\x01\xba\x23\x2d\x3e\x5b\xdc\x28\x52\x21\x9f\xec\x19\x81\xbf\xfb\x40\x4a\x4a\xa4\x78\x8a\x9b\xe9\x90\x48\x24\x7f\x7f\xf8\xc4\xdf\xb3\xa6\xef\x2e\xbf\x5c\xdc\xfd\x39\xff\x0c\x39\x15\x7a\x76\x7c\x34\x0d\xff\x41\x0b\xb3\xe2\x0c\x0d\x9b\x1d\x1f\x85\x31\x14\x72\x76\x7c\x04\x00\x30\x2d\x90\x04\x64\xb9\x70\x1e\x89\xb3\xfb\xbb\xab\xf1\x4f\xac\x37\x67\x44\x81\x9c\xad\x15\x6e\x4a\xeb\x88\x41\x66\x0d\xa1\x21\xce\x36\x4a\x52\xce\x25\xae\x55\x86\xe3\xf8\x70\x0a\xca\x28\x52\x42\x8f\x7d\x26\x34\xf2\xb3\xf4\x43\x9f\x2b\x27\x2a\xc7\xf8\x50\xa9\x35\x67\xdf\xc6\xf7\x3f\x8f\x2f\x6c\x51\x0a\x52\x0b\x8d\x1d\x62\x85\x1c\xe5\x0a\x9f\xa0\xa4\x48\xe3\xec\x06\xd5\x2a\x5f\x58\xe7\xcf\xe1\x36\x47\x4d\xe8\xe0\x2b\xae\x94\x27\x27\x48\x59\x33\x9d\xd4\xcb\x8e\x8f\xa6\x93\x66\x7f\x61\xa7\x67\xb3\xfb\x52\x0a\xc2\x16\x33\x9d\xe4\x67\xf5\xd4\xc2\xca\x6d\xab\xb0\xb4\xae\x00\x25\x39\x43\xa9\xe8\xca\xba\xa2\xd5\x8e\xb3\xca\x94\x15\x01\x6d\x4b\xe4\x2c\x57\x52\xa2\x61\x4d\x55\x94\x64\xb0\x16\xba\x42\xfe\xf8\x98\x5e\x5f\xee\x76\x1d\x58\x6b\xf2\x46\x14\xd8\x21\x5b\xb8\x21\x6a\xc2\x7f\xa8\x25\x0e\x7f\x3b\xd4\x81\xa3\x47\x1e\x68\xfa\x54\xb7\xe4\x10\xe9\xcd\x42\x3e\xc2\x3a\x52\x35\xcf\x01\xb1\x0b\x45\xdb\x37\x4b\x65\x8a\xb6\x1d\xa1\xc0\x71\x70\x4f\x82\xde\x5e\x3b\x1f\x50\xbd\x1d\x09\x3a\x54\xbd\xb9\xf5\x24\x34\x5c\x58\xf9\x76\xbd\x32\x62\x03\xb4\x23\x3a\x7f\x1a\x3c\x54\x4a\x5b\x19\x72\xff\xa3\x9a\x35\xae\x5b\xd0\x7a\xe4\x80\xde\x74\x51\x11\x59\xd3\x30\xd6\x0f\x0c\xac\xc9\xb4\xca\xfe\xe6\xac\x8a\x69\x69\xce\x6e\x32\x62\x7b\xf1\xa9\x11\x6d\x70\x26\x21\x39\x31\x73\x4d\x9c\xa6\x3e\x73\xaa\xa4\x66\x7e\x2d\x1c\xf4\x18\x81\xc3\xb2\x32\x59\x08\x2c\x24\x23\x78\x7c\xf6\x15\x96\x3a\x7c\x00\x0e\x06\x37\xf0\xed\x8f\xdf\x7f\x25\x2a\xbf\xe2\x43\x85\x9e\x92\xd1\xa7\xfe\xc2\xa0\xfa\x59\x63\x81\x86\x3c\x70\x90\x36\xab\xc2\x7d\xba\x42\x6a\x86\x7f\xd9\x5e\xcb\xe4\xa4\x8d\xf3\xc9\x28\xc5\x66\xf9\x0b\xa6\x52\xb8\x48\xb1\x51\x46\xda\x4d\xaa\x6d\x16\xbb\x49\x5a\x0a\xca\x43\xa1\x53\x5f\x6a\x45\x09\x9b\xb0\xae\x87\x88\x4a\x4b\x5b\xee\x39\x2b\x2b\x9a\x0b\xca\xff\x83\xd1\x3a\xb5\x52\x06\x7e\x68\xc0\x7f\x59\x65\x5e\xd2\x06\x82\xc6\x67\x53\x76\xde\x2d\x51\xb8\x42\x27\x38\xef\xed\x3f\x0d\x36\xe5\x35\x61\x91\x9c\x84\xdb\x93\x51\x1a\x8f\xc4\x69\x1f\x58\xe7\x7a\x18\x5a\x37\x82\x01\x70\xc8\xea\x30\x34\x04\x7b\x50\x55\xd0\x2b\x7e\x63\x54\x07\xa0\xcf\x09\x1a\xc6\x3f\x47\x6f\xc8\x78\x9d\x89\x57\xbc\xd7\x0b\x06\xe0\xd7\x97\xe7\x70\x53\x15\x0b\x74\xc9\x10\x81\x92\x2d\x76\xd4\x01\xef\xc2\x4f\x4c\xfb\xe0\xf0\x21\xb5\x25\x9a\x84\xcd\xef\xef\xd8\x69\x7b\x46\xba\x6f\x3e\x2e\x31\x0e\x85\xdc\xc6\x9a\x64\xb9\x30\x2b\x1c\x4e\x4b\xb8\xd4\x12\x92\x80\x8b\xa8\x58\x68\xe0\x9c\xc3\x47\x78\xff\x3e\xf2\x05\xa2\xca\xc7\xb1\x1f\x3f\x7c\xdc\x83\x87\xeb\xc5\x19\x05\xde\x7a\xfb\xb4\xbf\xd6\x21\x55\xce\xc0\x52\x68\x8f\x2f\xa6\x77\x80\xda\xe3\xf7\x1a\x7a\xf7\x8a\x21\xa1\xd1\x51\xc2\xae\x84\xd2\x28\x81\x6c\xd3\x3d\xc0\xd7\xed\xe3\x5d\x2f\x2e\xdf\xe3\xac\xf7\x4a\xba\xd5\xf6\x68\x64\xf2\xdb\xed\x97\x9b\xd4\x93\x53\x66\xa5\x96\xdb\xa4\x97\xbd\x51\xff\xfd\xec\x49\xec\x42\xd7\x7b\xea\x76\xf1\xb3\x23\x7c\x72\xfd\x1b\x00\x00\xff\xff\x7a\x2f\xe7\x91\x82\x09\x00\x00")

func templatesSheltersEditHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSheltersEditHtml,
		"templates/shelters/edit.html",
	)
}

func templatesSheltersEditHtml() (*asset, error) {
	bytes, err := templatesSheltersEditHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/shelters/edit.html", size: 2434, mode: os.FileMode(438), modTime: time.Unix(1556507743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSheltersNewHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x4c\x78\x58\xcb\xd8\x58\x4e\x8a\x1e\x8a\x5d\xd1\x40\x9b\xdd\xa0\x29\xda\xc4\x58\x27\xc0\xf6\x48\x4b\x63\x89\x28\x45\xca\xe4\xc8\xae\x51\xe4\xbf\x17\x94\x64\x5b\xca\xda\x42\xcc\x83\x4d\x71\xe6\xbd\xf9\xd0\x1b\x49\xf1\xd5\x97\xa7\xbb\xe7\xbf\xe7\x5f\x21\xa7\x42\xcd\x82\xd8\xff\x81\x12\x3a\xe3\x0c\x35\x9b\x05\x41\x9c\xa3\x48\x67\x01\x00\x40\x5c\x20\x09\x48\x72\x61\x1d\x12\x67\x2f\xcf\xf7\x93\x5f\x58\xd7\xa4\x45\x81\x9c\x6d\x24\x6e\x4b\x63\x89\x41\x62\x34\xa1\x26\xce\xb6\x32\xa5\x9c\xa7\xb8\x91\x09\x4e\xea\x8b\x6b\x90\x5a\x92\x14\x6a\xe2\x12\xa1\x90\xdf\x46\x37\x3d\xaa\x9c\xa8\x9c\xe0\xba\x92\x1b\xce\xbe\x4f\x5e\x7e\x9d\xdc\x99\xa2\x14\x24\x97\x0a\x3b\xbc\x12\x39\xa6\x19\xee\x91\x24\x49\xe1\xec\x11\x65\x96\x2f\x8d\x75\x9f\x60\x91\xa3\x22\xb4\xf0\x0d\x33\xe9\xc8\x0a\x92\x46\xc7\xd3\xc6\x2d\x88\xa7\x4d\x69\x41\x9c\xdf\xce\x4e\x7b\xe6\xb7\xde\xbc\x34\xe9\xae\x8d\xb0\x32\xb6\x00\x99\x72\x96\x58\x14\x84\xf7\xc6\x16\x6d\x70\xbf\xf6\x24\x8f\xa2\xc0\xc3\x61\xbc\xb4\x47\x8f\x58\xea\xb2\x22\xa0\x5d\x89\x9c\x11\xfe\x4b\xac\x6d\x9a\xff\xed\x30\x79\x50\x0f\xb8\x20\x8b\x48\x17\x92\xba\x1a\x34\x44\x7b\x27\x69\x77\x21\x69\x22\x69\x37\x9c\xa9\xa0\x4b\xab\x77\x1e\x33\x44\x3a\x37\x8e\x84\x82\x3b\x93\x5e\x4a\x5d\xd6\x48\x0f\x1c\xec\x83\xa9\x34\xd9\x8b\x5b\xd1\xa0\x86\x88\xe3\x65\x45\x64\x74\x0b\x6e\x2e\x18\x18\x9d\x28\x99\xfc\xb3\x97\x51\xab\x9b\x70\xcc\x66\x8d\xfe\xd0\xee\xb5\x14\x4f\x1b\x4c\xab\xbf\xa9\x17\xa0\x97\x6e\xa3\xc9\xd8\x25\x56\x96\xd4\x18\x37\xc2\x42\x8f\x0f\x38\xac\x2a\x9d\x78\x29\x43\x38\x86\xff\x0e\x49\x79\x4f\x8b\x6b\xe0\xa0\x71\x0b\xdf\xff\xfa\xf3\x77\xa2\xf2\x1b\xae\x2b\x74\x14\x8e\x3f\xf7\xfc\x7c\xc0\xaf\x0a\x0b\xd4\xe4\x80\x43\x6a\x92\xca\xef\xa3\x0c\xa9\x3d\xfe\x6d\xf7\x90\x86\xa3\xe3\x40\x8c\xc6\x11\xb6\x80\x3e\x55\x7b\xfa\x52\xa6\x82\x10\x78\x27\x21\xbf\xfc\xd0\x7c\xea\x85\x8b\x7c\x97\xd3\x07\xc2\x22\x1c\xf9\xed\x68\x1c\x6d\x84\xaa\xf0\xba\x87\x6b\x26\xe3\x3c\xb2\x19\x82\xd3\x58\x2f\xff\xf3\x48\xaf\xf4\x73\x31\x05\x0d\x24\x5b\xcb\xf9\x34\x72\x7e\x90\xe3\x79\xf8\x51\xb2\x67\xb2\x6e\x64\x37\x90\x78\xe3\xf0\x23\xfa\xf5\x73\x70\xd8\x5b\x5c\x47\xa6\x44\x1d\xb2\xf9\xd3\xe2\x99\x5d\xc3\x56\xea\xd4\x6c\x23\x65\x92\xfa\xe9\x17\x19\x2b\x33\xa9\xe1\x23\x8c\xa6\xae\x11\x94\x9b\x8e\x3a\xea\xa8\x09\xb4\x45\x91\xee\xea\x82\x93\x5c\xe8\x0c\xcf\x8a\xce\x2f\xb9\x82\xd0\xc3\x6a\x50\xdd\x44\xe0\x9c\xc3\xcf\xf0\xe1\x43\x4d\xe7\x79\x2a\x57\x9f\xfd\x74\x73\xf3\x16\x7d\x94\xae\x2b\x8d\x76\x3e\xd4\x1f\x8b\xa7\xc7\xa8\xf4\x2f\xa4\x96\xb7\xb1\x74\xb2\xdc\xaf\x37\xd5\x01\x7f\x5f\xbd\xf0\xf1\x10\x2e\x7a\xf8\xf2\x23\xad\x45\xaa\xac\x86\x95\x50\x0e\xfb\xd6\x57\x40\xe5\xf0\xbd\x25\x5f\x9d\x2f\x59\x28\xb4\x14\xb2\x7b\x21\x15\xa6\x40\x06\xaa\x66\x80\xda\x24\xaf\xd8\x89\x6a\x07\xd2\xea\x8a\xa1\x7b\x2b\x1d\xea\x34\xac\xfb\xe9\xc8\x4a\x9d\xc9\xd5\x2e\xec\x4d\xec\xb8\x77\xef\xdf\xf2\xbf\x06\xf1\x74\xff\x34\xf2\xaf\x56\xff\x39\xf1\x7f\x00\x00\x00\xff\xff\x12\x24\xd8\x06\x5e\x08\x00\x00")

func templatesSheltersNewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSheltersNewHtml,
		"templates/shelters/new.html",
	)
}

func templatesSheltersNewHtml() (*asset, error) {
	bytes, err := templatesSheltersNewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/shelters/new.html", size: 2142, mode: os.FileMode(438), modTime: time.Unix(1556507402, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSheltersShelterHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xcf\x4e\xe3\x3c\x10\xbf\xe7\x29\x06\x1f\x20\xd5\x47\x1b\x3e\xc4\x61\x45\xed\x48\xa8\x2d\x5a\x24\x96\x45\x0b\x48\xec\xd1\x8d\x87\xc6\x5a\xd7\x6e\xed\x69\x2b\x84\xf2\xee\x2b\x27\x29\xdb\xb4\xaa\x84\x2f\xb5\x67\x7e\xff\x3a\x4e\xc2\x4f\xc6\x3f\x47\xcf\xbf\x1f\x27\x50\xd2\xdc\xe4\x09\x8f\x3f\x60\xa4\x9d\x09\x86\x96\xe5\x49\xc2\x4b\x94\x2a\x4f\x00\x00\xf8\x1c\x49\x42\x51\x4a\x1f\x90\x04\x7b\x79\xbe\xed\x7f\x63\xbb\x2d\x2b\xe7\x28\xd8\x5a\xe3\x66\xe1\x3c\x31\x28\x9c\x25\xb4\x24\xd8\x46\x2b\x2a\x85\xc2\xb5\x2e\xb0\x5f\x1f\xce\x41\x5b\x4d\x5a\x9a\x7e\x28\xa4\x41\xf1\xff\xe0\xa2\x23\x55\x12\x2d\xfa\xb8\x5c\xe9\xb5\x60\xaf\xfd\x97\x9b\xfe\xc8\xcd\x17\x92\xf4\xd4\xe0\x8e\xae\x46\x81\x6a\x86\x5b\x26\x69\x32\x98\x3f\xa0\x9e\x95\x53\xe7\xc3\x35\x3c\x95\x68\x08\x3d\xdc\xd9\x37\xc7\xb3\xa6\x9d\xf0\xac\xf9\x4b\x09\x9f\x3a\xf5\xde\x52\xcb\xcb\xbc\x0b\x2e\x2f\xdb\x4e\x20\xef\xec\x2c\xbf\x1b\x5f\xf3\xac\xdd\xd7\x8d\x8f\x8f\xc1\xdd\xb8\xaa\x1a\xd0\xd4\x77\xd1\x5b\xad\x07\x39\xc7\x43\x5e\xac\x1e\x63\xde\x28\xe5\x31\x84\x43\xd2\x13\x79\x44\xaa\xaa\xf3\x78\x18\x69\x7a\x6f\xb7\x4f\x24\x09\xb7\x65\xb7\xb2\xe4\xb7\x9d\x47\x17\x48\x9a\x91\x53\x87\x66\xd3\x15\x91\xb3\xe0\x6c\x61\x74\xf1\x47\x30\x54\x9a\xda\xcc\x69\x8f\xe5\x13\xa5\x89\x67\x0d\xe8\x08\x43\xa1\x41\xc2\x1d\xce\xb8\x2e\xfc\x63\xf1\xac\x19\x2f\x0f\x85\xd7\x0b\x6a\x64\xd6\xd2\xc3\x8e\x17\x08\x78\x5b\xd9\x82\xb4\xb3\x90\xf6\xe0\xa3\xc6\xc4\xb5\xd1\x56\xb9\xcd\xc0\xb8\x42\xd6\x4d\x71\x50\xf9\x0f\xce\xb2\xa8\x74\x36\xac\x49\xd5\x30\xf9\x34\xe8\x44\x3b\x6a\x11\x91\x1e\x97\x20\xc0\xe2\x06\x5e\x7f\xdc\x7f\x27\x5a\xfc\xc2\xe5\x0a\x03\xa5\xbd\xe1\x27\xce\xe3\x72\xe0\x16\x68\x53\x36\x9e\xdc\x4f\x9e\x27\xec\x7c\x3f\x4b\xaf\x8b\xb5\x1e\xa5\x7a\x0f\xf1\x5a\x8a\x52\xda\x19\x1e\x8d\x10\x97\x7e\x83\x34\xd2\x6a\x52\x7d\x97\x20\x84\x80\x2b\x38\x3d\xad\xe5\xa2\xce\x2a\xd4\xb5\xcb\x8b\xab\x7d\xf6\x97\x66\x35\x70\x5e\xcf\x74\x33\xb2\xd0\x4c\x25\x9c\x0d\x3b\x3a\x15\xa0\x09\xf8\xd5\x30\x27\xc7\xc3\x48\x83\x9e\x52\x76\x2b\xb5\x41\x05\xe4\xda\xcb\x80\xd6\xf7\x84\xf5\xf6\x8c\x93\xc3\x5d\xed\x84\x56\xa5\xcd\x60\xab\x84\x67\xdb\x67\x28\xbe\xbc\xf1\x43\xf5\x37\x00\x00\xff\xff\x14\xa1\x08\x2d\xb8\x04\x00\x00")

func templatesSheltersShelterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSheltersShelterHtml,
		"templates/shelters/shelter.html",
	)
}

func templatesSheltersShelterHtml() (*asset, error) {
	bytes, err := templatesSheltersShelterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/shelters/shelter.html", size: 1208, mode: os.FileMode(438), modTime: time.Unix(1556506032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSheltersSheltersHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\x41\x6e\xdb\x30\x10\xbc\xeb\x15\x5b\x22\x47\xcb\xac\x6f\x45\x40\x0a\x30\x94\x16\xe8\x25\x0d\xe0\xa4\x68\x8f\xb4\x39\x35\x09\x50\x94\x4b\x6d\xec\x06\x86\xfe\x5e\x28\x96\x6b\x49\x2e\x92\xbd\x08\x1c\xce\xac\x76\x06\x4b\xf5\xe1\xee\x5b\xf9\xf8\xf3\xe1\x33\x39\xae\x42\x91\xa9\xee\x43\xc1\xc4\xad\x16\x88\xa2\xc8\x32\xe5\x60\x6c\x91\x11\x11\xa9\x0a\x6c\x68\xe3\x4c\x6a\xc0\x5a\x3c\x3d\x7e\xc9\x3f\x89\xe1\x55\x34\x15\xb4\xd8\x7b\x1c\x76\x75\x62\x41\x9b\x3a\x32\x22\x6b\x71\xf0\x96\x9d\xb6\xd8\xfb\x0d\xf2\xd7\xc3\x8c\x7c\xf4\xec\x4d\xc8\x9b\x8d\x09\xd0\x8b\xf9\xc7\x51\x2b\xc7\xbc\xcb\xf1\xfb\xd9\xef\xb5\xf8\x91\x3f\x2d\xf3\xb2\xae\x76\x86\xfd\x3a\x60\xd0\xd7\x43\xc3\x6e\x71\x56\xb2\xe7\x80\xe2\x1e\x7e\xeb\xd6\x75\x6a\x6e\x69\x19\x02\xad\x1c\x02\x23\x35\x4a\x9e\xae\x33\x25\x4f\x96\x32\xb5\xae\xed\x4b\x2f\x75\x8b\x62\x4c\x76\x8b\x73\x53\xb3\xee\x54\xd4\x97\xe2\x4b\x20\x03\x6c\x0c\x74\xd5\xb7\xa2\x7b\x53\x61\xcc\x96\x53\xfa\x7f\xf5\x4b\x6b\x13\x9a\xe6\x0d\x69\x77\x1a\xcd\xa2\xf8\xe2\xe8\x5c\xc7\x63\x32\x71\x0b\xba\xf1\xd1\xe2\xcf\x8c\x6e\x10\x50\x21\x32\xdd\x6a\x9a\x53\xdb\x4e\x06\x49\xd7\x83\x28\xb6\xc5\xf1\xf8\x4f\x38\xef\x0c\x51\xdb\x2a\xc9\xf6\x7d\xf2\x8a\x13\xc0\x6d\x3b\xa3\x21\x5a\x7a\x7e\xa1\x29\xb8\x62\xc3\xb8\x42\xcb\xfa\x39\x72\x7a\x65\x5f\xfd\xec\xe4\xef\xc2\x7d\xa8\x1b\x36\xa1\xac\xed\x1b\xf3\x19\x72\x09\xbf\xb4\x98\xcb\xa1\xf2\xeb\x1d\xb5\xad\x28\xbe\x7b\x1c\x94\x34\xc5\x34\xf4\x34\xcd\x14\xd1\x0e\xa2\x53\x72\x10\xbc\x92\xfd\xc6\x28\x79\x02\xbb\x85\xeb\x1e\xd7\xdf\x00\x00\x00\xff\xff\x1a\xda\xf7\x35\x6c\x03\x00\x00")

func templatesSheltersSheltersHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSheltersSheltersHtml,
		"templates/shelters/shelters.html",
	)
}

func templatesSheltersSheltersHtml() (*asset, error) {
	bytes, err := templatesSheltersSheltersHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/shelters/shelters.html", size: 876, mode: os.FileMode(438), modTime: time.Unix(1556414762, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/items/edit.html":        templatesItemsEditHtml,
	"templates/items/item.html":        templatesItemsItemHtml,
	"templates/items/items.html":       templatesItemsItemsHtml,
	"templates/items/new.html":         templatesItemsNewHtml,
	"templates/shelters/edit.html":     templatesSheltersEditHtml,
	"templates/shelters/new.html":      templatesSheltersNewHtml,
	"templates/shelters/shelter.html":  templatesSheltersShelterHtml,
	"templates/shelters/shelters.html": templatesSheltersSheltersHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"items": &bintree{nil, map[string]*bintree{
			"edit.html":  &bintree{templatesItemsEditHtml, map[string]*bintree{}},
			"item.html":  &bintree{templatesItemsItemHtml, map[string]*bintree{}},
			"items.html": &bintree{templatesItemsItemsHtml, map[string]*bintree{}},
			"new.html":   &bintree{templatesItemsNewHtml, map[string]*bintree{}},
		}},
		"shelters": &bintree{nil, map[string]*bintree{
			"edit.html":     &bintree{templatesSheltersEditHtml, map[string]*bintree{}},
			"new.html":      &bintree{templatesSheltersNewHtml, map[string]*bintree{}},
			"shelter.html":  &bintree{templatesSheltersShelterHtml, map[string]*bintree{}},
			"shelters.html": &bintree{templatesSheltersSheltersHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
